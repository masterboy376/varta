import React, { useContext, useState } from 'react'
import { MdSecurity } from 'react-icons/md'
import Link from 'next/link'
import Head from 'next/head'
import { VartaContext } from '../context/context'
import { AiOutlineLoading3Quarters } from 'react-icons/ai'
import ReCAPTCHA from "react-google-recaptcha"

const Login = () => {
  const { userLogin, alertError } = useContext(VartaContext)

  const [loggingin, setLoggingin] = useState(false)
  const [credentials, setCredentials] = useState({ username: '', password: '' })
  const [gRecaptcha, setGRecaptcha] = useState('')

  const onChange = (e) => {
    setCredentials({ ...credentials, [e.target.name]: e.target.value })
  }
  const onChangeRecaptcha = (captchaValue) => {
    setGRecaptcha(captchaValue)
  }
  const onSubmit = async (e) => {
    e.preventDefault()
    setLoggingin(true)
    if (gRecaptcha.length != 0) {
      await userLogin(credentials)
    }
    else {
      alertError("Please verify the captcha!")
    }
    setLoggingin(false)
    window.grecaptcha.reset();
  }
  

  return (
    <>
      <Head>
        <title>Varta | Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/icons/discord.svg" />
      </Head>
      <div className="min-h-screen flex items-center justify-center px-4 sm:px-6">
        <div className={`max-w-md w-full space-y-3  mx-auto my-auto ${loggingin ? 'pointer-events-none' : ''}`}>
          <div>
            <img
              className="mx-auto h-12 w-auto"
              src={`/icons/discord.svg`}
              alt="Workflow"
            />
            <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-300">Sign in to your account</h2>
          </div>
          <form onSubmit={onSubmit} className="mt-2 space-y-6" action="#" method="POST">
            <input type="hidden" name="remember" defaultValue="true" />
            <div className="shadow-sm -space-y-px">
              <div>
                <label htmlFor="username" className="sr-only">
                  Username
                </label>
                <input
                  disabled={loggingin}
                  onChange={onChange}
                  id="username"
                  name="username"
                  type="text"
                  required
                  className="rounded-xl border hover:border-blue-600 border-gray-800 w-full outline-none p-3 h-11/12 resize-none text-white bg-gray-800 mb-2"
                  placeholder="Username"
                />
              </div>
              <div>
                <label htmlFor="password" className="sr-only">
                  Password
                </label>
                <input
                  disabled={loggingin}
                  onChange={onChange}
                  id="password"
                  name="password"
                  type="password"
                  required
                  minLength={6}
                  className="rounded-xl border hover:border-blue-600 border-gray-800 w-full outline-none p-3 h-11/12 resize-none text-white bg-gray-800"
                  placeholder="Password"
                />
              </div>
            </div>

            <div className="shadow-sm -space-y-px">
              <div className="relative w-full flex justify-center">
              <ReCAPTCHA
                  sitekey={process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY}
                  onChange={onChangeRecaptcha}
                />
              </div>
            </div>

            <div className="flex items-center justify-between">
              <div className="flex items-center">
                <input
                  disabled={loggingin}
                  onChange={() => { }}
                  id="rememberme"
                  name="rememberme"
                  type="checkbox"
                  checked
                  className="h-4 w-4 text-blue-600 focus:ring-blue-700 border-gray-300 rounded-lg"
                />
                <label htmlFor="remember-me" className="ml-2 block text-sm text-gray-300">
                  Remember me
                </label>
              </div>

              <div className="text-sm">
                <Link href="/sendLink">
                  <a disabled={loggingin} className="font-medium text-blue-600 hover:text-blue-700">
                    Forgot your password?
                  </a>
                </Link>
              </div>
            </div>

            <div>
              <button
                disabled={loggingin}
                type="submit"
                className="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-xl text-white bg-blue-600 hover:bg-blue-700 "
              >
                <span className="absolute left-0 inset-y-0 flex items-center pl-3">
                  <MdSecurity className="h-5 w-5 text-indigo-500 group-hover:text-indigo-400" size={24} />
                </span>
                {loggingin ?
                  <AiOutlineLoading3Quarters className='animate-spin' size={24} />
                  :
                  'Log in'
                }
              </button>
            </div>
            <div className="text-sm flex justify-between">
              Don't have an account?
              <Link href="/signup">
                <a disabled={loggingin} className="font-medium text-blue-600 hover:text-blue-700">
                  Register here
                </a>
              </Link>
            </div>
          </form>
        </div>
      </div>
    </>
  )
}

export default Login